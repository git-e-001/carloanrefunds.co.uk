<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * @method static where(string $string, mixed $old)
 * @method static updateOrCreate(array $array, array $array1)
 * @method static latest()
 * @property array|mixed|string|string[]|null slug
 * @property mixed title
 */
class Page extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'slug',
        'status',
        'is_home',
        'is_sitemap',
    ];

    public function image(): \Illuminate\Database\Eloquent\Relations\MorphOne
    {
        return $this->morphOne(Image::class, 'imageable');
    }

    public function scopeActive($query)
    {
        return $query->where('status', 1);
    }

    public function scopeHome($query)
    {
        return $query->where('is_home', 1);
    }

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function (Page $page) {
            $page->slug = slug($page->title);
        });

        self::updating(function (Page $page) {
            $page->slug = slug($page->title);
        });
    }

    public function contents(): \Illuminate\Database\Eloquent\Relations\HasMany
    {
        return $this->hasMany(PageContent::class);
    }

    public function seo()
    {
        return $this->hasOne(Seo::class);
    }

}
